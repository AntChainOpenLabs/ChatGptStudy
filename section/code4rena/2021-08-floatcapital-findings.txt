1. {"Vulnerability Type": "Missing events/timelocks", "Vulnerability Location": "Owner/admin only functions that change critical parameters", "Repair Method": "Add events to all owner/admin functions that change critical parameters. Add timelocks to introduce time delays for critical parameter changes that significantly impact market/user incentives/security.", "Vulnerability Information": "Missing events/timelocks for owner/admin only functions that change critical parameters"}
2. {"Vulnerability Type": "Variables not indexed", "Vulnerability Location": "stakerTokenShiftIndex_to_longShortMarketPriceSnapshotIndex_mapping and stakerTokenShiftIndex_to_accumulativeFloatIssuanceSnapshotIndex_mapping", "Repair Method": "Add an index with marketIndex to the variables: stakerTokenShiftIndex_to_longShortMarketPriceSnapshotIndex, stakerTokenShiftIndex_to_accumulativeFloatIssuanceSnapshotIndex", "Vulnerability Information": "2 variables not indexed by marketIndex"}
3. {"Vulnerability Type": "Wrong Aave usage", "Vulnerability Location": "YieldManager's logic in L161-L170", "Repair Method": "Change to provide aToken instead of payment token", "Vulnerability Information": "Wrong Aave usage of claimRewards"}
4. {"Vulnerability Type": "Copy paste error", "Vulnerability Location": "_batchConfirmOutstandingPendingActions function of LongShort.sol", "Repair Method": "Change the second instance of batched_amountSyntheticToken_toShiftAwayFrom_marketSide[marketIndex][true] = 0 to batched_amountSyntheticToken_toShiftAwayFrom_marketSide[marketIndex][false] = 0", "Vulnerability Information": "Copy paste error in _batchConfirmOutstandingPendingActions"}
5. {"Vulnerability Type": "Users could shift tokens with more than they have staked", "Vulnerability Location": "shiftTokens function of Staker", "Repair Method": "Add checks on userNextPrice_amountStakedSyntheticToken_toShiftAwayFrom_long and userNextPrice_amountStakedSyntheticToken_toShiftAwayFrom_short to ensure that the sum of the two variables does not exceed user's stake balance", "Vulnerability Information": "Users could shift tokens on Staker with more than he has staked"}
6. {"Vulnerability Type": "Incorrect balance computed", "Vulnerability Location": "getUsersConfirmedButNotSettledSynthBalance() function of LongShort.sol", "Repair Method": "Use the correct price snapshot to compute the balance", "Vulnerability Information": "Incorrect balance computed in getUsersConfirmedButNotSettledSynthBalance()"}

{"Vulnerability Type": "Variable Initialization", "Vulnerability Location": "functions initializeMarket and _seedMarketInitially in LongShort.sol", "Repair Method": "Replace latestMarket with marketIndex in the functions initializeMarket and _seedMarketInitially", "Vulnerability Information": "The latestMarket variable is initialized multiple times and the previous market(s) are not initialized properly."}

{"Vulnerability Type": "Market Stuck", "Vulnerability Location": "function _updateSystemStateInternal in LongShort.sol", "Repair Method": "Enhance _updateSystemStateInternal so that after a certain period of time without price movements, the entire function is executed (including the marketUpdateIndex[marketIndex] += 1;)", "Vulnerability Information": "If the price of a synthetic token stays constant, the marketUpdateIndex[marketIndex] will never increase and the market will effectively be stuck."}

{"Vulnerability Type": "Incorrect Calculation", "Vulnerability Location": "function _calculateFloatPerSecond in Staker.sol", "Repair Method": "Return (k * longPrice, 0) and (0, k * shortPrice) in the cases where rewards should go fully to long and short token holders respectively", "Vulnerability Information": "The edge cases where full rewards go to either the long or short token returns 1e18 times too large values."}

