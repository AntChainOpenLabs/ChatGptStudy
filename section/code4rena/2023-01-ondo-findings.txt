{"Vulnerability Type": "signature replay attack", "Vulnerability Location": "KYCRegistry contract's addKYCAddressViaSignature function", "Repair Method": "Maintain a nonce mapping for message signers that can be incremented for every successful signature validation", "Vulnerability Information": "The addKYCAddressViaSignature function does not prevent replaying of signatures in the case where KYC status was revoked from a user, allowing a malicious user to forcefully grant KYC status to themselves again."}

{"Vulnerability Type": "Arithmetic", "Vulnerability Location": "CTokenModified.sol", "Repair Method": "Enforce a minimum deposit that cannot be withdrawn by minting a small amount of CToken units to 0x00 address on the first deposit", "Vulnerability Information": "The exchange rate is dependent upon the ratio of CToken's totalSupply and underlying token balance of CToken contract, which can be manipulated by an attacker to steal funds of initial depositors of a freshly deployed CToken contract."}

1. {"Vulnerability Type": "Loss of user funds", "Vulnerability Location": "completeRedemptions() function in CashManager contract", "Repair Method": "Update the totalBurned amount to consider refunds resulting from the call to _processRefund", "Vulnerability Information": "Refunded amount is not updated in the totalBurned storage variable for the given epoch, causing loss of funds for the users."}
2. {"Vulnerability Type": "Overwriting user balance", "Vulnerability Location": "setPendingRedemptionBalance() function in CashManager contract", "Repair Method": "Add oldBalance check to revert if not equal", "Vulnerability Information": "setPendingRedemptionBalance() does not check old balances, resulting in the possibility of overwriting the new balance added by the user."}

1. {"Vulnerability Type": "Locked Funds", "Vulnerability Location": "function completeRedemptions()", "Repair Method": "Remove KYC check for redeemers and refundees or find a way to allow admin to refund or redeem locked funds", "Vulnerability Information": "Sanctioned user's funds are locked and even the admin has no control over it."}
2. {"Vulnerability Type": "Inconsistent Output", "Vulnerability Location": "function setEpochDuration()", "Repair Method": "Add updateEpoch modifier to ensure transitionEpoch is executed before setEpochDuration", "Vulnerability Information": "The result of the setEpochDuration function execution can be impacted by any external agent leading to inconsistent output."}

