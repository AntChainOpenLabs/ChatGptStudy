[
    {
        "Code": "",
        "CodeNames": [
            ""
        ],
        "VulnerabilityDesc": [
            {
                "Location": "PoolCommiter.commit() function",
                "Type": "Inconsistency with fee-on-transfer tokens",
                "Description": "The PoolCommiter.commit() function will store the entire amount in the commitment but with fee-on-transfer tokens, fewer tokens will be transferred which leads to inconsistencies with the pool.longBalance() and in uncommit. One possible mitigation is to measure the asset change right before and after the asset-transferring routines.",
                "Repair": "Avoid using fee-on-transfer or rebasing tokens"
            },
            {
                "Location": "PoolCommitter._uncommit function",
                "Type": "Sending tokens to the wrong user",
                "Description": "The _uncommit function sends tokens to the wrong user because it calls the ILeveragedPool(leveragedPool).quoteTokenTransfer/mintTokens function with msg.sender, which is the pool, not the commit owner.",
                "Repair": "Instead of using msg.sender, use _commit.owner"
            },
            {
                "Location": "PoolKeeper.keeperReward computation",
                "Type": "Mixed Units",
                "Description": "The computation mixes WADs and Quads which leads to issues. The keeper rewards are off as the _keeperGas * _tipPercent is divided by 1e18 instead of 1e2.",
                "Repair": "Make keeperTip() return a byte16 Quad value as a percentage where 100% = ABDKMathQuad.fromUInt(1) or divide by 100 as a quad instead of 1e18 as a quad because _tipPercent is not a WAD value, but simply a percentage where 1 = 1%"
            }
        ]
    }
]