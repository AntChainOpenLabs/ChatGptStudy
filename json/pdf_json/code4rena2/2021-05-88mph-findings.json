[
    {
        "Code": "",
        "CodeNames": [
            ""
        ],
        "VulnerabilityDesc": [
            {
                "Location": "function distributeFundingRewards",
                "Type": "Unchecked Ownership",
                "Description": "In contract MPHMinter, the function distributeFundingRewards does not check whether the contract itself is the owner of mph. If the contract is not the owner of mph, mph.ownerMint could revert, causing functions such as withdraw, rolloverDeposit, payInterestToFunders in the contract DInterest to revert as well.",
                "Repair": "Add a mph.owner() != address(this) check"
            },
            {
                "Location": "function deposit",
                "Type": "Incompatibility with Deflationary/Fee-on-Transfer Tokens",
                "Description": "The DInterest.deposit function takes a depositAmount parameter but this parameter is not the actual transferred amount for fee-on-transfer / deflationary (or other rebasing) tokens. The actual deposited amount might be lower than the specified depositAmount of the function parameter. This would lead to wrong interest rate calculations on the principal.",
                "Repair": "Transfer tokens first and compare pre-/after token balances to compute the actual deposited amount"
            }
        ]
    }
]