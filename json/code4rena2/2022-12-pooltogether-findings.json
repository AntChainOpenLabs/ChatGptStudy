[
    {
        "Code": "",
        "CodeNames": [
            ""
        ],
        "VulnerabilityDesc": [
            {
                "Location": "CrossChainExecutor contracts",
                "Type": "Stateful Reentrancy",
                "Description": "The CrossChainExecutor contracts do not update the necessary states for failing transactions, which creates several issues for CrossChainExecutor contracts.",
                "Repair": "The CrossChainExecutor contract should store whether a relayed call was attempted to be executed to make sure the execution cannot be tried again. The CallLib library can be changed to not completely revert the transaction when any individual Call gets failed."
            },
            {
                "Location": "EthereumToArbitrumRelayer.sol#L118-#L127",
                "Type": "User unable to cancel L1 calls",
                "Description": "An attacker can make users unable to cancel their L1 calls on Ethereum To Arbitrum.",
                "Repair": "Change callValueRefundAddress in createRetryableTicket to _sender"
            },
            {
                "Location": "CrossChainRelayerArbitrum.processCalls",
                "Type": "Excess submission fees may be lost",
                "Description": "When a smart contract calls CrossChainRelayerArbitrum.processCalls, excess submission fees may be lost.",
                "Repair": "Allow the user to specify excessFeeRefundAddress and callValueRefundAddress when calling CrossChainRelayerArbitrum.processCalls"
            }
        ]
    }
]