1. {"Vulnerability Type": "Unchecked Ownership", "Vulnerability Location": "function distributeFundingRewards", "Repair Method": "Add a mph.owner() != address(this) check", "Vulnerability Information": "In contract `MPHMinter`, the function `distributeFundingRewards` does not check whether the contract itself is the owner of `mph`. If the contract is not the owner of `mph`, `mph.ownerMint` could revert, causing functions such as `withdraw`, `rolloverDeposit`, `payInterestToFunders` in the contract `DInterest` to revert as well."}

2. {"Vulnerability Type": "Incompatibility with Deflationary/Fee-on-Transfer Tokens", "Vulnerability Location": "function deposit", "Repair Method": "Transfer tokens first and compare pre-/after token balances to compute the actual deposited amount", "Vulnerability Information": "The `DInterest.deposit` function takes a `depositAmount` parameter but this parameter is not the actual transferred amount for fee-on-transfer / deflationary (or other rebasing) tokens. The actual deposited amount might be lower than the specified `depositAmount` of the function parameter. This would lead to wrong interest rate calculations on the principal."}

