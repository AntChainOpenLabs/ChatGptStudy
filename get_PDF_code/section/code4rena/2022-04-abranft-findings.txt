{"Vulnerability Type": "Critical Oracle Manipulation Risk", "Vulnerability Location": "NFTPairWithOracle.sol:286-288", "Repair Method": "Add a check in the require statement in line 205-211 that params.oracle == cur.oracle", "Vulnerability Information": "The lender could change the Oracle once a loan is outstanding, and therefore seize the collateral at the expense of the borrower, if the actual value of the collateral has increased significantly."}

{"Vulnerability Type": "Avoidance of Liquidation Via Malicious Oracle", "Vulnerability Location": "NFTPairWithOracle.sol:316", "Repair Method": "Add require(params.oracle == accepted.oracle) as a condition in _lend. Consider only allowing whitelisted oracles, to avoid injection of malicious oracles at the initial loan request stage", "Vulnerability Information": "A borrower who requests a loan with a malicious oracle can avoid legitimate liquidation."}

{"Vulnerability Type": "Lender is able to seize the collateral by changing the loan parameters", "Vulnerability Location": "NFTPairWithOracle.sol:198-223", "Repair Method": "Don't allow updateLoanParams() to change the ltvBPS value", "Vulnerability Information": "The lender is able to seize the collateral at any time by modifying the loan parameters."}

{"Vulnerability Type": "Mistake while checking LTV to lender accepted LTV", "Vulnerability Location": "NFTPairWithOracle.sol:316", "Repair Method": "Change the condition to params.ltvBPS <= accepted.ltvBPS", "Vulnerability Information": "It comments in the _lend() function that lender accepted conditions must be at least as good as the borrower is asking for."}

{"Vulnerability Type": "Reentrancy", "Vulnerability Location": "NFTPair.sol:218, NFTPairWithOracle.sol:238", "Repair Method": "Move the external call to the end of the function to conform with checks-effects-interaction pattern", "Vulnerability Information": "The NFTPair contract can be reentered, and a loan can be requested without the borrower supplying the collateral."}

{"Vulnerability Type": "Unchecked return value", "Vulnerability Location": "NFTPairWithOracle contract", "Repair Method": "Check the success value returned by the get function of the INFTOracle interface before using the rate value", "Vulnerability Information": "The success value returned by the get function of the INFTOracle interface is not checked in the NFTPairWithOracle contract, which may result in stale data being used and assets being lost. The vulnerability has been confirmed and upgraded to High severity."}

