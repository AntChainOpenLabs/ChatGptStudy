1. {"Vulnerability Type": "Arbitrary contract call", "Vulnerability Location": "UniV3LpVault._swap", "Repair Method": "Validate the entire path against a predefined whitelist while in `_checkSwapPath`", "Vulnerability Information": "Allows users to perform arbitrary contract calls during the swap process if `swapPath` is not validated properly."}
2. {"Vulnerability Type": "Improper handling of ERC20 tokens", "Vulnerability Location": "contracts/vault_and_oracles/FlashLoan.sol (line 48, 58), contracts/vault_and_oracles/UniV3LpVault.sol (line 418)", "Repair Method": "Use OpenZeppelinâ€™s `SafeERC20`'s `safeTransfer()` instead of `approve()`", "Vulnerability Information": "The code as currently implemented does not handle tokens such as Tether (USDT) properly when they're a Uniswap pool asset, which would prevent USDT from being used by this project."}
3. {"Vulnerability Type": "In-use uniswapV3 positions become stuck", "Vulnerability Location": "Comptroller._setUniV3LpVault", "Repair Method": "Remove the option to change `Comptroller.uniV3LpVault` altogether", "Vulnerability Information": "Changing `Comptroller.uniV3LpVault` would mean all actions including collateral calculation, uniswapV3 position withdrawal, uniswapV3 collateral liquidation are no longer performable on existing NFTs, causing NFT tokens to become stuck."}

1. {"Vulnerability Type": "Undercollateralized loans possible", "Vulnerability Location": "Comptroller.sol#L1491", "Repair Method": "Add a check to ensure collateral factor is not set to 100% or above", "Vulnerability Information": "The `_setPoolCollateralFactors` function does not check that the collateral factor is < 100%. It's possible that it's set to 200% and then borrows more than the collateral is worth, stealing from the pool."}
2. {"Vulnerability Type": "Dysfunctional CToken._acceptAdmin due to lack of function to assign pendingAdmin", "Vulnerability Location": "CToken.sol#L1379", "Repair Method": "Add a `proposePendingAdmin` function where the current admin can propose successors", "Vulnerability Information": "The implementation of `CToken` in Duality introduced an `_acceptAdmin` function, which presumably should allow changing the `admin`. However, there does not exist a pairing `proposePendingAdmin` function that can propose a new `pendingAdmin`, thus `pendingAdmin` will never be set. This renders the `_acceptAdmin` function useless."}

