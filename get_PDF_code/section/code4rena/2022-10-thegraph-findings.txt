{"Vulnerability Type": "Reinitialization", "Vulnerability Location": "Initialize function in L2GraphToken.sol, BridgeEscrow.sol, L2GraphTokenGateway.sol, L1GraphTokenGateway.sol", "Repair Method": "Use the modifier 'initializer' to protect the initialize function from being reinitiated", "Vulnerability Information": "Initialize function in L2GraphToken.sol, BridgeEscrow.sol, L2GraphTokenGateway.sol, and L1GraphTokenGateway.sol can be invoked multiple times from the implementation contract. This means a compromised implementation can reinitialize the contract above and become the owner to complete the privilege escalation then drain the user's fund."}

{"Vulnerability Type": "Value Loss", "Vulnerability Location": "L1GraphTokenGateway's outboundTransfer function", "Repair Method": "Add a 'refundAddr' address parameter to the API", "Vulnerability Information": "If L1GraphTokenGateway's outboundTransfer is called by a contract, the entire msg.value is blackholed, whether the ticket got redeemed or not."}

{"Vulnerability Type": "Compiler Version", "Vulnerability Location": "L2GraphTokenGateway's onlyL1Counterpart modifier", "Repair Method": "Wrap the calculation in an unchecked block, which will make it behave correctly", "Vulnerability Information": "After proposed 0.8.0 upgrade kicks in, L2 finalizeInboundTransfer might not work."}

{"Vulnerability Type": "Governor can rug pull the escrow", "Vulnerability Location": "BridgeEscrow.sol#L28-L30", "Repair Method": "Restrict access to `approveAll()` to the \"bridge that manages the GRT funds held by the escrow\" or only allow spending via other protocol functions.", "Vulnerability Information": "Governor can approve an arbitrary address to spend any amount from BridgeEscrow, which is a severe undermining of decentralization. The escrowed tokens are never burnt, so the users would need to trust the governor perpetually."}

